/*
 * NetDrone Engine
 * Copyright Â© 2022 Origin Studio Inc.
 *
 */

#ifndef ___NETDRONE_ENUMS_H___
#define ___NETDRONE_ENUMS_H___

enum NAT_TYPE {
	NAT_NONE = 0,
	NAT_FIREWALL,
	NAT_FULL_CONE,
	NAT_RESTRICTED,
	NAT_PORT_RESTRICTED,
	NAT_SYMMETRIC,
	NAT_MAX
};

enum SENSOR_TYPE {
	SENSOR_NETWORK_BEGIN = 0,
	SENSOR_EVENT_SELECT = SENSOR_NETWORK_BEGIN,
	SENSOR_IOCP,
	SENSOR_EVENT_POLL,
	SENSOR_POLL,
	SENSOR_KQUEUE,
	SENSOR_NETWORK_END = SENSOR_KQUEUE,

	SENSOR_MAX
};

enum CRYPT_TYPE {
	CRYPT_NONE = 0,
	CRYPT_RC5,
	CRYPT_RC5_SERIAL,
	CRYPT_RC6,
	CRYPT_RC6_SERIAL,
	CRYPT_MAX
};

enum PACKET_TYPE {
	PACKET_THROW = 0,
	PACKET_TRUST,
	PACKET_QUEUE,
	PACKET_BLOCK,
	PACKET_BLOCK_ACK,
	PACKET_ORDER,
	PACKET_ORDER_ACK,
	PACKET_SYN,
	PACKET_ACK,
	PACKET_MAX
};

enum COMMAND_TYPE {
	COMMAND_NATIVE = 0,
	COMMAND_EXTEND,
	COMMAND_MAX
};

enum NETWORK_TYPE {
	NETWORK_CLIENT_BEGIN = 0,
	NETWORK_TCP_CLIENT = NETWORK_CLIENT_BEGIN,
	NETWORK_UDP_CLIENT,
	NETWORK_CLIENT_END = NETWORK_UDP_CLIENT,

	NETWORK_SERVER_BEGIN,
	NETWORK_TCP_SERVER = NETWORK_SERVER_BEGIN,
	NETWORK_UDP_SERVER,
	NETWORK_SERVER_END = NETWORK_UDP_SERVER,

	NETWORK_MAX
};

enum FIELD_TYPE {
	FIELD_CHAR = 0,
	FIELD_BOOL,
	FIELD_SHORT,
	FIELD_ENUM,
	FIELD_FLOAT
};

#endif // ___NETDRONE_ENUMS_H___

/* EOF */
